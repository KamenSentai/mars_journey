{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/components/Audio.js","src/scripts/components/Circle.js","src/scripts/components/Cursor.js","src/scripts/components/Frame.js","src/scripts/components/Loading.js","src/scripts/components/Parallax.js","src/scripts/components/Slider.js","src/scripts/main.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class Audio\n{\n  constructor()\n  {\n    this.play()\n  }\n\n  play()\n  {\n    const $sound = new Howl(\n    {\n      src: ['assets/audios/travel.mp3'],\n      autoplay: true,\n      loop: true,\n      volume: 0.08,\n      orientation: [-1, -1, -1],\n    })\n\n    const $motor = new Howl(\n    {\n      src: ['assets/audios/vroum.mp3'],\n      autoplay: true,\n      loop: true,\n      volume: 0.09,\n      orientation: [-1, -1, -1],\n    })\n\n    const $people = new Howl(\n    {\n      src: ['assets/audios/people.m4a'],\n      autoplay: true,\n      loop: true,\n      volume: 0.8,\n    })\n\n    const $radio = new Howl(\n    {\n      src: ['assets/audios/radio.mp3'],\n      autoplay: true,\n      loop: true,\n      volume: 1,\n      orientation: [0, 0, 0],\n    })\n\n    let x = -100,\n      y = 0,\n      z = -20,\n      a = 100,\n      b = 0,\n      c = 40,\n      z2 = 10\n\n    const music = () =>\n    {\n      window.requestAnimationFrame(music)\n      // Radio and people sound switching side\n      if (a > -100 && x < 100)\n      {\n        $people.pos(x, y, z)\n        x += 0.5\n        $radio.pos(a, b, c)\n        a -= 0.5\n      }\n      else if (a == -100 && x == 100)\n      {\n        a = 100\n        x = -100\n      }\n      // Motor going behind us\n      if (z2 > -2)\n      {\n        z2 -= 0.01\n        $motor.pos(0, 0, z2)\n      }\n    }\n    music()\n  }\n}\n","import { cursor } from '../main'\n\nexport default class Circle\n{\n  constructor(x, y, c, r, t)\n  {\n    this.x = x\n    this.y = y\n    this.c = c\n    this.r = r\n    this.t = t\n  }\n\n  create()\n  {\n    // Get audio\n    const $audio = document.querySelector('audio.tick')\n\n    // Get element\n    const $circles = document.querySelector('.circles')\n\n    // Set circle\n    const $circle = document.createElement('div')\n    $circle.classList.add('circle')\n    $circle.classList.add(`pos-${this.x}-${this.y}`)\n    $circle.classList.add(`slide-${this.c}-${this.r}`)\n    $circle.style.left = `${this.x}%`\n    $circle.style.top  = `${this.y}%`\n\n    // Set components\n    const $stick_1 = document.createElement('div')\n    const $stick_2 = document.createElement('div')\n    const $text    = document.createElement('p')\n    $stick_1.classList.add('stick-1')\n    $stick_2.classList.add('stick-2')\n    $text.classList.add('text')\n    $text.textContent = this.t\n\n    if (this.x > 50)\n    {\n      $circle.classList.add('return')\n      $text.style.transformOrigin = '50% 50%'\n      $text.style.transform = 'rotateZ(180deg)'\n      $text.style.direction = 'rtl'\n    }\n\n    // Add circle\n    $stick_2.appendChild($text)\n    $stick_1.appendChild($stick_2)\n    $circle.appendChild($stick_1)\n    $circles.appendChild($circle)\n\n    // Move\n    const posX = $circle.offsetLeft + $circle.offsetWidth / 2\n    const posY = $circle.offsetTop + $circle.offsetHeight / 2\n    const posCircle =\n    {\n      x: posX,\n      y: posY\n    }\n\n    const moveCircle = (event) =>\n    {\n      if ($circle.classList.contains('shown'))\n      {\n        const deltaX = event.clientX - posX\n        const deltaY = event.clientY - posY\n\n        if\n        (\n          Math.abs(deltaX) <= $circle.offsetWidth * 2.5 &&\n          Math.abs(deltaY) <= $circle.offsetHeight * 2.5\n        )\n        {\n          $circle.style.transform = `scale(1.25) translate(${deltaX * 0.125}px, ${deltaY * 0.125}px) rotateZ(${!$circle.classList.contains('return') ? 0 : 180}deg)`\n        }\n        else\n        {\n          $circle.style.transform = `scale(1) translate(0) rotateZ(${!$circle.classList.contains('return') ? 0 : 180}deg)`\n        }\n      }\n    }\n\n    const usermove  = !Modernizr.touchevents ? 'mousemove'  : 'touchmove'\n    const userenter = !Modernizr.touchevents ? 'mouseenter' : 'touchstart'\n    const userout   = !Modernizr.touchevents ? 'mouseout'   : 'touchend'\n\n    window.addEventListener(usermove, (event) =>\n    {\n      moveCircle(event)\n    })\n\n    // Play Audio\n    $circle.addEventListener(userenter, () =>\n    {\n      cursor.isMouseDown = true\n      $audio.play()\n      $audio.volume = 0.1\n\n      // Hide other circles\n      for (const otherCircle of Array.from($circles.querySelectorAll('.circle')))\n      {\n        if (otherCircle.classList.contains('shown') && otherCircle != $circle)\n        {\n          otherCircle.style.opacity = '0.125'\n        }\n      }\n    })\n    $circle.addEventListener(userout, () =>\n    {\n      cursor.isMouseDown = false\n\n      // Show other circles\n      for (const otherCircle of Array.from($circles.querySelectorAll('.circle')))\n      {\n        if (otherCircle.classList.contains('shown') && otherCircle != $circle)\n        {\n          otherCircle.style.opacity = '1'\n        }\n      }\n    })\n  }\n\n  display()\n  {\n    // Display circle\n    const $circle = document.querySelector(`.pos-${this.x}-${this.y}.slide-${this.c}-${this.r}`)\n    $circle.classList.add('shown')\n    $circle.style.transform = `scale(1) translate(0) rotateZ(${!$circle.classList.contains('return') ? 0 : 180}deg)`\n  }\n\n  hide()\n  {\n    // Hide circle\n    const $circle = document.querySelector(`.pos-${this.x}-${this.y}.slide-${this.c}-${this.r}`)\n    $circle.classList.remove('shown')\n    $circle.style.transform = `scale(0) translate(0) rotateZ(${!$circle.classList.contains('return') ? 0 : 180}deg)`\n  }\n}\n","export default class Cursor\n{\n  constructor()\n  {\n    this.draw()\n  }\n\n  draw()\n  {\n    // Get elements\n    const $canvas = document.querySelector('canvas')\n    const context = $canvas.getContext('2d')\n\n    // Resize canvas\n    const resize = () =>\n    {\n      $canvas.width = window.innerWidth\n      $canvas.height = window.innerHeight\n    }\n    window.addEventListener('resize', resize)\n    resize()\n\n    // Define variables\n    this.isMouseDown = false\n    let subDown = 0\n    let radius  = 30\n    let width   = 0.5\n    let moving  = false\n\n    // Define positions\n    const mouse =\n    {\n      x: $canvas.width,\n      y: $canvas.height\n    }\n    const circleCoords =\n    {\n      x: mouse.x,\n      y: mouse.y\n    }\n\n    if (!Modernizr.touchevents)\n    {\n      // Listen to events\n      document.addEventListener('mousedown', () =>\n      {\n        this.isMouseDown = true\n      })\n      document.addEventListener('mouseup', () =>\n      {\n        this.isMouseDown = false\n        radius = 30\n      })\n      document.addEventListener('mousemove', (event) =>\n      {\n        mouse.x = event.clientX\n        mouse.y = event.clientY\n        moving = true\n      })\n    }\n    else\n    {\n      window.addEventListener('touchmove', (event) =>\n      {\n        mouse.x = event.touches[0].clientX\n        mouse.y = event.touches[0].clientY\n        moving = true\n      })\n    }\n\n    // Animate cursor\n    const loopCanvas = () =>\n    {\n      window.requestAnimationFrame(loopCanvas)\n\n      if (moving)\n      {\n        if (radius < 100)\n          radius += 0.5\n        if (width < 1)\n          width += 0.5\n      }\n      else\n      {\n        if (radius > 30)\n          radius -= 3\n        if (width > 1)\n          radius -= 0.1\n      }\n      moving = false\n\n      if (this.isMouseDown)\n      {\n        subDown += 0.1\n        radius  = Math.max(15, radius - subDown)\n      }\n      else\n      {\n        subDown = 0\n      }\n\n      // Reset\n      context.clearRect(0, 0, $canvas.width, $canvas.height)\n\n      circleCoords.x += (mouse.x - circleCoords.x) * 0.12\n      circleCoords.y += (mouse.y - circleCoords.y) * 0.12\n\n      // Draw circle\n      context.beginPath()\n      context.arc(circleCoords.x, circleCoords.y, radius, 0, Math.PI * 2)\n      context.strokeStyle = '#FFFFFFA0'\n      context.lineWidth = width\n      context.stroke()\n\n      //Draw dot\n      context.beginPath()\n      context.arc(mouse.x, mouse.y, 4, 0, Math.PI * 2)\n      context.fillStyle = '#FFFFFF'\n      context.fill()\n    }\n    loopCanvas()\n  }\n}\n","export default class Frame\n{\n  constructor()\n  {\n    this.update()\n  }\n\n  update()\n  {\n    // Get elements\n    const $frame   = document.querySelector('.frame')\n    const $hours   = $frame.querySelector('.hours')\n    const $minutes = $frame.querySelector('.minutes')\n    const $seconds = $frame.querySelector('.seconds')\n    const $posA    = $frame.querySelector('.pos-a')\n    const $posO    = $frame.querySelector('.pos-o')\n\n    // Define variables\n    let posA = 48.856614\n    let posO = 2.287592\n\n    // Update time\n    setInterval(() =>\n    {\n      const date = new Date()\n      $hours.textContent   = `${date.getHours()   > 9 ? '' : 0}${date.getHours()}`\n      $minutes.textContent = `${date.getMinutes() > 9 ? '' : 0}${date.getMinutes()}`\n      $seconds.textContent = `${date.getSeconds() > 9 ? '' : 0}${date.getSeconds()}`\n    }, 1000)\n\n    // Update position\n    setInterval(() =>\n    {\n      $posA.textContent = posA.toPrecision(7)\n      $posO.textContent = posO.toPrecision(6)\n    }, 100)\n\n    if (!Modernizr.touchevents)\n    {\n      // Mousemove event\n      window.addEventListener('mousemove', (event) =>\n      {\n        posA += (event.clientX - window.innerWidth / 2) / 100000\n        posO += (event.clientY - window.innerHeight / 2) / 100000\n      })\n    }\n    else\n    {\n      // Device orientation\n      window.addEventListener('deviceorientation', (event) =>\n      {\n        posA += ((event.alpha + 90) / 180 - 0.5) / 100\n        posO += (event.beta / 90 - 0.5) / 100\n      })\n    }\n  }\n}\n","export default class Loading\n{\n  constructor()\n  {\n    this.animate()\n  }\n\n  animate()\n  {\n    // Get element\n    const $loadingPage = document.querySelector('.loadingPage')\n\n    // Set data\n    const animData =\n    {\n      container: document.getElementById('bodymovin'),\n      renderer: 'svg',\n      loop: false,\n      prerender: false,\n      autoplay: true,\n      autoloadSegments: false,\n      path: 'assets/lottie/v1.json'\n    }\n    const anim = bodymovin.loadAnimation(animData)\n\n    // Hide loading page\n    const hideLoader = () =>\n    {\n      $loadingPage.style.top = '-100%'\n    }\n    setTimeout(hideLoader, 5000)\n  }\n}\n","export default class Parallax\n{\n  constructor()\n  {\n    this.move()\n  }\n\n  move()\n  {\n    // Get elements\n    const $parallax = document.querySelectorAll('.parallax')\n\n    // Get elements\n    for (const $element of $parallax)\n    {\n      $element.parallaxX = 0\n      $element.parallaxY = 0\n    }\n\n    // Define delta\n    const delta =\n    {\n      x: 0,\n      y: 0\n    }\n\n    if (!Modernizr.touchevents)\n    {\n      // Mousemove event\n      window.addEventListener('mousemove', (event) =>\n      {\n        delta.x = -(event.clientX / window.innerWidth - 0.5)\n        delta.y = -(event.clientY / window.innerHeight - 0.5)\n      })\n    }\n    else\n    {\n      // Device orientation\n      window.addEventListener('deviceorientation', (event) =>\n      {\n        delta.x = -((event.alpha + 90) / 180 - 0.5)\n        delta.y = -(event.beta / 90 - 0.5)\n      })\n    }\n\n    // Animate parallax\n    const loop = () =>\n    {\n      window.requestAnimationFrame(loop)\n\n      for (const $element of $parallax) {\n        $element.parallaxX += ((delta.x / $element.dataset.depth * 100) - $element.parallaxX) * 0.1\n        $element.parallaxY += ((delta.y / $element.dataset.depth * 100) - $element.parallaxY) * 0.1\n\n        $element.style.transform = `translate(${$element.parallaxX}px, ${$element.parallaxY}px)`\n      }\n    }\n    loop()\n  }\n}\n","import Circle from './Circle'\nimport { cursor } from '../main'\n\nexport default class Slider\n{\n  constructor()\n  {\n    this.build()\n  }\n\n  build()\n  {\n    // Slider elements\n    const $slider       = document.querySelector('.slider')\n    const $slides       = Array.from($slider.querySelectorAll('.slide'))\n  const $frame        = document.querySelector('.frame')\n  const $title        = $frame.querySelector('.title')\n    const $titleChapter = $frame.querySelector('.title-chapter')\n    const $textChapter  = $frame.querySelector('.text-chapter')\n    const $circles      = document.querySelector('.circles')\n  const $dots         = document.querySelector('.dots')\n\n    const dots      = new Array()\n    let isScrolling = false\n    let isScrolled  = false\n    let isClicked   = false\n    let isPositive  = true\n    let deltaScroll = 0\n    let row = 0\n    let col = 0\n    let move\n    let blocs\n\n    // Responsive\n    const isFirefox = (/Firefox/i.test(navigator.userAgent))\n    const mouseWheelEvent = !isFirefox ? 'mousewheel' : 'DOMMouseScroll'\n\n    // Create indicator when a slide has multple blocs\n    const indicateScroll = () =>\n    {\n      for (const $slide of $slides)\n      {\n        const $blocs = Array.from($slide.querySelectorAll('.bloc'))\n        if ($blocs.length > 1)\n        {\n          for (const $bloc of $blocs)\n          {\n            const $scroll  = document.createElement('span')\n            const $barTop  = document.createElement('div')\n            const $barDown = document.createElement('div')\n\n            $scroll.classList.add('scroll')\n            $barTop.classList.add('top')\n            $barDown.classList.add('down')\n            $scroll.textContent = 'Scroll'\n\n            $scroll.appendChild($barTop)\n            $scroll.appendChild($barDown)\n            $bloc.appendChild($scroll)\n          }\n        }\n      }\n    }\n    indicateScroll()\n\n    // Create dots\n    const createDots = () =>\n    {\n      for (let index = 0; index < $slides.length; index++)\n      {\n        const $dot = document.createElement('div')\n        $dot.classList.add('dot')\n        $dot.dataset.index = index\n        $dots.appendChild($dot)\n        dots.push($dot)\n      }\n\n      // Set active dot\n      const $activeSlide = $slides.find($slide => $slide.classList.contains('active'))\n      const indexActive  = $slides.indexOf($activeSlide)\n      const $activeDot   = Array.from($dots.querySelectorAll('.dot')).find($dot => $dot.dataset.index == indexActive)\n      $activeDot.classList.add('active')\n    }\n    createDots()\n\n    // Change slide on mousewheel\n    window.addEventListener(mouseWheelEvent, (event) =>\n    {\n      // Update scrolling\n      if (!isFirefox)\n      {\n        if ((event.deltaY >= 0) != isPositive)\n        {\n          isPositive = !isPositive\n          deltaScroll = 0\n        }\n        deltaScroll += event.deltaY\n      } else if ((event.detail >= 0) != isPositive)\n      {\n        isPositive = !isPositive\n        deltaScroll = 0\n      }\n      deltaScroll += event.detail\n\n      // Prevent multiple scroll\n      if (!isScrolled && !isClicked)\n      {\n        // Get active slide\n        const $activeSlide = $slides.find($slide => $slide.classList.contains('active'))\n        const $blocs = Array.from($activeSlide.querySelectorAll('.bloc'))\n        const $activeBloc = $blocs[row]\n        blocs = $blocs.length\n\n        // Scroll down\n        if (deltaScroll > 0)\n        {\n          // Below bloc\n          if (row < blocs - 1)\n            slideDown($activeSlide, $activeBloc)\n\n          // Right slide\n          else if (row == blocs - 1)\n            slideRight($activeSlide, $activeBloc)\n        }\n\n        // Scoll up\n        else if (deltaScroll < 0)\n        {\n          // Uppon bloc\n          if (row > 0)\n            slideUp($activeSlide, $activeBloc)\n\n          // Left slide\n          else if (row == 0)\n            slideLeft($activeSlide, $activeBloc)\n        }\n\n        updateSlide()\n\n        isScrolled = true\n        setTimeout(() =>\n        {\n          isScrolled = false\n        }, 1500)\n      }\n    })\n\n    // Change slide on keypress\n    window.addEventListener('keydown', (event) =>\n    {\n      // Prevent multiple simultaneous scroll\n      if (!isScrolling && !isClicked && (event.keyCode == 37 || event.keyCode == 38 || event.keyCode == 39 || event.keyCode == 40))\n      {\n        const $activeSlide = $slides.find($slide => $slide.classList.contains('active'))\n        const $blocs       = Array.from($activeSlide.querySelectorAll('.bloc'))\n        const $activeBloc  = $blocs[row]\n        blocs = $blocs.length\n        if (event.keyCode == 37 || event.keyCode == 38)\n        {\n          isScrolling = true\n          if (row == 0)\n            slideLeft($activeSlide, $activeBloc)\n          else\n            slideUp($activeSlide, $activeBloc)\n        }\n        if (event.keyCode == 39 ||  event.keyCode == 40)\n        {\n          isScrolling = true\n          if (row == blocs - 1)\n            slideRight($activeSlide, $activeBloc)\n          else\n            slideDown($activeSlide, $activeBloc)\n        }\n        updateSlide()\n\n        // Resset slide change permission\n        setTimeout(() =>\n        {\n          isScrolling = false\n        }, 1500)\n      }\n    })\n\n    // Slide to the top\n    const slideUp = (currentSlide, currentBloc) =>\n    {\n      currentSlide.style.transform = `translateY(-${--row * window.innerHeight}px)`\n      currentBloc.classList.remove('active')\n      Array.from(currentSlide.querySelectorAll('.bloc'))[row].classList.add('active')\n      move = 'up'\n    }\n\n    // Slide to the down\n    const slideDown = (currentSlide, currentBloc) =>\n    {\n      currentSlide.style.transform = `translateY(-${++row * 100}%)`\n      currentBloc.classList.remove('active')\n      Array.from(currentSlide.querySelectorAll('.bloc'))[row].classList.add('active')\n      move = 'down'\n    }\n\n    // Slide to the left\n    const slideLeft = (currentSlide, currentBloc) =>\n    {\n      // Not first slide\n      if (col > 0)\n      {\n        col--\n        row = Array.from($slides[col].querySelectorAll('.bloc')).length - 1\n        currentSlide.classList.remove('active')\n        currentSlide.style.transform = `translateX(100%)`\n        $slides[col].classList.add('active')\n        $slides[col].style.transform = `translateX(0%) translateY(-${row * 100}%)`\n        currentBloc.classList.remove('active')\n        Array.from($slides[col].querySelectorAll('.bloc'))[row].classList.add('active')\n        move = 'left'\n\n        // Update dots\n        dots[col + 1].classList.remove('active')\n        dots[col].classList.add('active')\n      }\n    }\n\n    // Slide to the right\n    const slideRight = (currentSlide, currentBloc) =>\n    {\n      // Not last slide\n      if (col < $slides.length - 1)\n      {\n        col++\n        currentSlide.classList.remove('active')\n        currentSlide.style.transform = `translateX(-100%) translateY(-${row * 100}%)`\n        $slides[col].classList.add('active')\n        $slides[col].style.transform = `translateX(0%)`\n        row = 0\n        currentBloc.classList.remove('active')\n        Array.from($slides[col].querySelectorAll('.bloc'))[row].classList.add('active')\n        move = 'right'\n\n        // Update dots\n        dots[col - 1].classList.remove('active')\n        dots[col].classList.add('active')\n      }\n    }\n\n    // Delete last character of a string\n    const reduceString = (string) =>\n    {\n      return string.substring(0, string.length - 1)\n    }\n\n    const eraseString = (element, rewrite, string, speed) =>\n    {\n      element.textContent = ''\n      element.style.opacity = '0'\n      if (rewrite)\n      {\n        writeString(element, string, 0, speed * 2, false)\n      }\n    }\n\n    // Write a string\n    const writeString = (element, string, index, speed, immediateErase) =>\n    {\n      const content = element.textContent\n      element.style.opacity = '1'\n      if (content.length < string.length && !immediateErase)\n      {\n        setTimeout(() =>\n        {\n          if (string[index] != undefined)\n          {\n            element.textContent += string[index]\n            index++\n            writeString(element, string, index, speed, immediateErase)\n          }\n        }, speed)\n      }\n    }\n\n    // Update elements\n    const updateCircles = () =>\n    {\n      for (const circleObject of circlesObjects)\n      {\n        if (circleObject.r == row && circleObject.c == col)\n          circleObject.display()\n        else\n          circleObject.hide()\n      }\n    }\n\n    const updateSlide = () =>\n    {\n      updateCircles()\n\n      // Exit slide 1\n      if (row == 0 && col == 1 && move == 'right')\n      {\n        $title.classList.add('hidden')\n        setTimeout(() =>\n        {\n          writeString($titleChapter, titlesChapters[0], 0, 50, false)\n          $textChapter.textContent = textsChapters[0][0]\n        }, 500)\n      }\n\n      // Enter slide 1\n      else if (row == 0 && col == 0 && move == 'left')\n      {\n        $title.classList.remove('hidden')\n        eraseString($titleChapter, false, '', 0)\n        $textChapter.textContent = ''\n      }\n      else if (move == 'left' ||  move == 'right')\n      {\n        eraseString($titleChapter, true, titlesChapters[col - 1], 25)\n        $textChapter.textContent = textsChapters[col - 1][row]\n      }\n      else if\n      (\n        move == 'up' ||\n        (move == 'down' && col != $slides.length - 1 && row != blocs - 1) ||\n        (move == 'down' && $textChapter.textContent != textsChapters[textsChapters.length - 1][textsChapters[textsChapters.length - 1].length - 1])\n      )\n      {\n        $textChapter.textContent = textsChapters[col - 1][row]\n      }\n    }\n\n    // Title of each chapter\n    const titlesChapters = new Array(\n      'Take-off',\n      'On board',\n      'The journey',\n      'The risks',\n      'Welcome to Mars'\n    )\n\n    // Text of each chapter\n    const textsChapters = new Array(\n      [\n        'It\\'s time to take off. Let\\'s board for 6 months of travel before arriving to the promised land.',\n        'For your trip, you will embark on the BFR. The new spaceship of Space X. It replaces the Falcon 9, Falcon Heavy and the Dragon capsule used to refuel the International Space Station.'\n      ], [\n        'Welcome aboard. This shuttle will be your inhabitant for the next 6 months. It\\'s time to learn more about the shuttle.',\n        'Your life on board will be completely different from the one you lived on land. Pressurization greather than a A380.'\n      ], [\n        'You will be free during your days but you must respect the instructions and activity for the good of your body.',\n        'The daily physical activity that is mandatory for the station\\'s long-duration passengers is done with blood, as are the various bodily needs. For food too, habits are changing.'\n      ], [\n        'It\\'s not without risk of conquering space. That\\'s why you\\'re forced to be really careful.',\n        'Many problems may occure because of the lack of gravity.'\n      ], [\n        'We have arrived. After 6 months of travel, you will be the first to put your foot on Mars.',\n        'Your mission of colonization begins, you will have to carry out the tasks of the role entrusted to you and build a new life and a new population.'\n      ]\n    )\n\n    // Create circles\n    const circlesObjects = new Array()\n\n    const t00_1 = 'According to plans unveiled in September 2016, the first flight to Mars would take place in 2024. The project, which would be developed thanks to the profits made by SpaceX and the personal wealth of its founder Elon Musk, will eventually lead to the establishment of a permanent colony on Mars.'\n    const c00_1 = new Circle(20, 60, 0, 0, t00_1)\n    circlesObjects.push(c00_1)\n\n    const t00_2 = 'Moon and Mars. This single system—one booster and one ship will eventually replace Falcon 9, Falcon Heavy and Dragon.'\n    const c00_2 = new Circle(80, 70, 0, 0, t00_2)\n    circlesObjects.push(c00_2)\n\n    const t10_1 = 'Methane fuel & Tank'\n    const c10_1 = new Circle(10, 70, 1, 0, t10_1)\n    circlesObjects.push(c10_1)\n\n    const t10_2 = 'Cabin for up to 100 people and cargo cabin tank'\n    const c10_2 = new Circle(70, 30, 1, 0, t10_2)\n    circlesObjects.push(c10_2)\n\n    const t10_3 = 'Liquid oxygen Tank for 6 month of Oxygen'\n    const c10_3 = new Circle(70, 60, 1, 0, t10_3)\n    circlesObjects.push(c10_3)\n\n    const t10_4 = 'Built with 9 Raptor engines'\n    const c10_4 = new Circle(75, 75, 1, 0, t10_4)\n    circlesObjects.push(c10_4)\n\n    const t20_1 = 'The Earth is a planet of the Solar System, the third closest to the Sun and the fifth largest, both in size and mass, of this planetary system of which it is also the most massive of the Earth.'\n    const c20_1 = new Circle(15, 50, 2, 0, t20_1)\n    circlesObjects.push(c20_1)\n\n    const t20_2 = 'The International Space Station is a low-Earth orbiting space station, permanently occupied by an international crew dedicated to scientific research in the space environment. This program, launched and piloted by NASA, is being developed jointly with the Russian Federal Space Agency (FKA), with the participation of European, Japanese and Canadian space agencies.'\n    const c20_2 = new Circle(70, 50, 2, 0, t20_2)\n    circlesObjects.push(c20_2)\n\n    const t21_1 = 'Cabins'\n    const c21_1 = new Circle(70, 70, 2, 1, t21_1)\n    circlesObjects.push(c21_1)\n\n    const t21_2 = 'Cargo tank'\n    const c21_2 = new Circle(80, 55, 2, 1, t21_2)\n    circlesObjects.push(c21_2)\n\n    const t21_3 = 'Liquid oxygen Tank'\n    const c21_3 = new Circle(90, 65, 2, 1, t21_3)\n    circlesObjects.push(c21_3)\n\n    const t30_1 = 'In astronomy, the narrower scientific meaning of a star is that of a plasma celestial body that radiates its own light through nuclear fusion reactions, or bodies that have been in this state at a stage in their life cycle, such as white dwarfs or neutron stars.'\n    const c30_1 = new Circle(15, 45, 3, 0, t30_1)\n    circlesObjects.push(c30_1)\n\n    const t30_2 = 'Space refers to the areas of the Universe beyond the atmospheres and celestial bodies. This is the almost zero density range that separates the stars. It is also called a space vacuum1. Depending on the designated space locations, it is sometimes referred to as parliamentary, interplanetary, interstellar (or interstellar) and intergalactic space to more precisely designate the space vacuum that is bounded by the Earth-Moon system, planets, stars and galaxies, respectively.'\n    const c30_2 = new Circle(75, 65, 3, 0, t30_2)\n    circlesObjects.push(c30_2)\n\n    const t50_1 = 'The Martian relief is characterized by craters, resulting from meteorite impacts, volcanoes, faults, dunes and valleys that are very similar to the terrestrial river valleys. These are the main indication of the presence of water on Mars a long time ago.'\n    const c50_1 = new Circle(25, 55, 5, 0, t50_1)\n    circlesObjects.push(c50_1)\n\n    const t50_2 = 'The soil is red because it contains many iron oxides Martian rocks consist of about three times as much iron as earth rocks.'\n    const c50_2 = new Circle(80, 45, 5, 0, t50_2)\n    circlesObjects.push(c50_2)\n\n    // Init circles\n    const initCircles = () =>\n    {\n      for (const circleObject of circlesObjects)\n      {\n        circleObject.create()\n        circleObject.hide()\n      }\n      c00_1.display()\n      c00_2.display()\n    }\n    initCircles()\n\n    // Update when arrive to destination\n    const slideDestination = (destination) =>\n    {\n      if (destination != 0)\n      {\n        $titleChapter.style.opacity = '1'\n        eraseString($titleChapter, true, titlesChapters[destination - 1], 25)\n        $textChapter.textContent = textsChapters[destination - 1][0]\n      }\n      else\n      {\n        $title.classList.remove('hidden')\n        eraseString($titleChapter, false, '', 0)\n        $textChapter.textContent = ''\n      }\n      for (const slide of $slides)\n      {\n        slide.style.transitionDuration = '0.75s'\n      }\n      setTimeout(() =>\n      {\n        isClicked = false\n      }, 500)\n    }\n\n    // Slide to aside\n    const slideNext = (current, destination) =>\n    {\n      if (current < destination)\n      {\n        dots[current].classList.remove('active')\n        $slides[current].classList.remove('active')\n        $slides[current].style.transform = `translateX(-100%) translateY(-${row * 100}%)`\n        Array.from($slides[current].querySelectorAll('.bloc'))[row].classList.remove('active')\n        current++\n        row = 0\n        dots[current].classList.add('active')\n        $slides[current].classList.add('active')\n        $slides[current].style.transform = `translateX(0%)`\n        Array.from($slides[current].querySelectorAll('.bloc'))[row].classList.add('active')\n\n        setTimeout(() =>\n        {\n          slideNext(current, destination)\n        }, 375)\n      }\n      else\n      {\n        slideDestination(destination)\n        updateCircles()\n      }\n    }\n\n    // Slide to aside\n    const slidePrevious = (current, destination) =>\n    {\n      if (current > destination)\n      {\n        dots[current].classList.remove('active')\n        $slides[current].classList.remove('active')\n        $slides[current].style.transform = `translateX(100%) translateY(-${row * 100}%)`\n        Array.from($slides[current].querySelectorAll('.bloc'))[row].classList.remove('active')\n        current--\n        row = 0\n        dots[current].classList.add('active')\n        $slides[current].classList.add('active')\n        $slides[current].style.transform = `translateX(0%)`\n        Array.from($slides[current].querySelectorAll('.bloc'))[row].classList.add('active')\n\n        setTimeout(() =>\n        {\n          slidePrevious(current, destination)\n        }, 375)\n      }\n      else\n      {\n        slideDestination(destination)\n        updateCircles()\n      }\n    }\n\n    // Listen on dots events\n    for (const $dot of dots)\n    {\n      // Listen on click\n      $dot.addEventListener('click', () =>\n      {\n        const $activeDot = dots.find(dot => dot.classList.contains('active'))\n        if ($activeDot != $dot && !isClicked)\n        {\n          if ($dot != dots[0])\n          {\n            $title.classList.add('hidden')\n          }\n          $titleChapter.style.opacity = '0'\n          $titleChapter.textContent   = ''\n          $textChapter.textContent    = ''\n          for (const circleObject of circlesObjects)\n          {\n            circleObject.hide()\n          }\n          isClicked = true\n          if (col < dots.indexOf($dot))\n          {\n            for (const slide of $slides)\n            {\n              slide.style.transitionDuration = '0.125s'\n              if (!slide.classList.contains('active'))\n              {\n                slide.style.transform = 'translateX(100%)'\n              }\n            }\n            slideNext(col, dots.indexOf($dot))\n            col = dots.indexOf($dot)\n            move = 'right'\n          }\n          else\n          {\n            $textChapter.textContent = ''\n            for (const slide of $slides)\n            {\n              slide.style.transitionDuration = '0.125s'\n              if (!slide.classList.contains('active'))\n              {\n                slide.style.transform = 'translateX(-100%)'\n              }\n            }\n            slidePrevious(col, dots.indexOf($dot))\n            col = dots.indexOf($dot)\n            move = 'left'\n          }\n        }\n      })\n\n      if (!Modernizr.touchevents)\n      {\n        // Listen on hover\n        $dot.addEventListener('mouseenter', () =>\n        {\n          cursor.isMouseDown = true\n        })\n        $dot.addEventListener('mouseout', () =>\n        {\n          cursor.isMouseDown = false\n        })\n      }\n      else\n      {\n        $dot.addEventListener('touchstart', () =>\n        {\n          cursor.isMouseDown = true\n        })\n        $dot.addEventListener('touchend', () =>\n        {\n          cursor.isMouseDown = false\n        })\n      }\n    }\n\n    // Replace circles if no match with the background\n    const windowSize =\n    {\n      x: window.innerWidth,\n      y: window.innerHeight\n    }\n    const match10 = new Array()\n    const match21 = new Array()\n\n    const $c10 = Array.from($circles.querySelectorAll('.slide-1-0'))\n    const $c21 = Array.from($circles.querySelectorAll('.slide-2-1'))\n\n    match10.push([$c10[0], c10_1])\n    match10.push([$c10[1], c10_2])\n    match10.push([$c10[2], c10_3])\n    match10.push([$c10[3], c10_4])\n    match21.push([$c21[0], c21_1])\n    match21.push([$c21[1], c21_2])\n    match21.push([$c21[2], c21_3])\n\n    const replaceCircles = () =>\n    {\n      windowSize.x = window.innerWidth\n      windowSize.y = window.innerHeight\n      const ratio = windowSize.x / windowSize.y\n\n      if (ratio < 0.8)\n      {\n        for (const c10 of match10)\n          c10[0].style.left = `${c10[1].x + 10}%`\n        match10[0][0].style.left = `${match10[0][1].x - 10}%`\n      }\n\n      if (ratio < 0.9)\n      {\n        for (const c10 of match10)\n          c10[0].style.left = `${c10[1].x + 5}%`\n        match21[0][0].style.top = `${match21[0][1].y + 7.5}%`\n        match21[1][0].style.top = `${match21[1][1].y + 12.5}%`\n      }\n\n      if (ratio < 1)\n      {\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y + 10}%`\n      }\n\n      if (ratio >= 1 && ratio <= 1.7)\n      {\n        for (const c10 of match10)\n          c10[0].style.left = `${c10[1].x}%`\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y}%`\n      }\n\n      if (ratio > 1.7)\n      {\n        for (const c10 of match10)\n          c10[0].style.left = `${c10[1].x - 5}%`\n        match10[0][0].style.left = `${match10[0][1].x + 5}%`\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y - 5}%`\n      }\n\n      if (ratio > 2)\n      {\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y - 10}%`\n      }\n\n      if (ratio > 2.3)\n      {\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y - 15}%`\n      }\n\n      if (ratio > 2.6)\n      {\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y - 20}%`\n      }\n\n      if (ratio < 1.2)\n      {\n        for (const c21 of match21)\n          c21[0].style.top = `${c21[1].y + 5}%`\n      }\n    }\n    replaceCircles()\n\n    window.addEventListener('resize', replaceCircles)\n  }\n}\n","import Loading  from './components/Loading'\nimport Audio    from './components/Audio'\nimport Parallax from './components/Parallax'\nimport Frame    from './components/Frame'\nimport Cursor   from './components/Cursor'\nimport Slider   from './components/Slider'\n\nconst loading  = new Loading()\nconst audio    = new Audio()\nconst parallax = new Parallax()\nconst frame    = new Frame()\nconst cursor   = new Cursor()\nconst slider   = new Slider()\n\nexport { cursor }"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}